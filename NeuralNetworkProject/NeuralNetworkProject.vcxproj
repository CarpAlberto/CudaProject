<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{027DF51B-A191-4FF8-9348-0FFAA65B99C5}</ProjectGuid>
    <RootNamespace>NeuralNetworkProject</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="ant_colony_optimization.cpp" />
    <ClCompile Include="bounding_layer.cpp" />
    <ClCompile Include="conditions_layer.cpp" />
    <ClCompile Include="conjugate_gradient.cpp" />
    <ClCompile Include="cross_entropy_error.cpp" />
    <ClCompile Include="data_set.cpp" />
    <ClCompile Include="error_term.cpp" />
    <ClCompile Include="evolutionary_algorithm.cpp" />
    <ClCompile Include="f1_score_optimization_threshold.cpp" />
    <ClCompile Include="genetic_algorithm.cpp" />
    <ClCompile Include="golden_section_order.cpp" />
    <ClCompile Include="gradient_descent.cpp" />
    <ClCompile Include="growing_inputs.cpp" />
    <ClCompile Include="incremental_order.cpp" />
    <ClCompile Include="independent_parameters.cpp" />
    <ClCompile Include="inputs.cpp" />
    <ClCompile Include="inputs_selection_algorithm.cpp" />
    <ClCompile Include="instances.cpp" />
    <ClCompile Include="kappa_coefficient_optimization_threshold.cpp" />
    <ClCompile Include="levenberg_marquardt_algorithm.cpp" />
    <ClCompile Include="loss_index.cpp" />
    <ClCompile Include="mathematical_model.cpp" />
    <ClCompile Include="matthew_correlation_optimization_threshold.cpp" />
    <ClCompile Include="mean_squared_error.cpp" />
    <ClCompile Include="minkowski_error.cpp" />
    <ClCompile Include="missing_values.cpp" />
    <ClCompile Include="model_selection.cpp" />
    <ClCompile Include="multilayer_perceptron.cpp" />
    <ClCompile Include="neural_network.cpp" />
    <ClCompile Include="neural_parameters_norm.cpp" />
    <ClCompile Include="newton_method.cpp" />
    <ClCompile Include="normalized_squared_error.cpp" />
    <ClCompile Include="numerical_differentiation.cpp" />
    <ClCompile Include="numerical_integration.cpp" />
    <ClCompile Include="order_selection_algorithm.cpp" />
    <ClCompile Include="ordinary_differential_equations.cpp" />
    <ClCompile Include="outputs.cpp" />
    <ClCompile Include="outputs_integrals.cpp" />
    <ClCompile Include="perceptron.cpp" />
    <ClCompile Include="perceptron_layer.cpp" />
    <ClCompile Include="performance_term.cpp" />
    <ClCompile Include="plug_in.cpp" />
    <ClCompile Include="principal_components_layer.cpp" />
    <ClCompile Include="probabilistic_layer.cpp" />
    <ClCompile Include="pruning_inputs.cpp" />
    <ClCompile Include="quasi_newton_method.cpp" />
    <ClCompile Include="random_search.cpp" />
    <ClCompile Include="regularization_term.cpp" />
    <ClCompile Include="roc_area_error.cpp" />
    <ClCompile Include="roc_curve_optimization_threshold.cpp" />
    <ClCompile Include="root_mean_squared_error.cpp" />
    <ClCompile Include="scaling_layer.cpp" />
    <ClCompile Include="selective_pruning.cpp" />
    <ClCompile Include="simulated_annealing_order.cpp" />
    <ClCompile Include="sum_squared_error.cpp" />
    <ClCompile Include="testing_analysis.cpp" />
    <ClCompile Include="threshold_selection_algorithm.cpp" />
    <ClCompile Include="tinyxml2\tinyxml2.cpp" />
    <ClCompile Include="training_algorithm.cpp" />
    <ClCompile Include="training_rate_algorithm.cpp" />
    <ClCompile Include="training_strategy.cpp" />
    <ClCompile Include="unscaling_layer.cpp" />
    <ClCompile Include="variables.cpp" />
    <ClCompile Include="weighted_squared_error.cpp" />
    <ClCompile Include="youden_index_optimization_threshold.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="ant_colony_optimization.h" />
    <ClInclude Include="bounding_layer.h" />
    <ClInclude Include="conditions_layer.h" />
    <ClInclude Include="conjugate_gradient.h" />
    <ClInclude Include="cross_entropy_error.h" />
    <ClInclude Include="data_set.h" />
    <ClInclude Include="error_term.h" />
    <ClInclude Include="evolutionary_algorithm.h" />
    <ClInclude Include="f1_score_optimization_threshold.h" />
    <ClInclude Include="genetic_algorithm.h" />
    <ClInclude Include="golden_section_order.h" />
    <ClInclude Include="gradient_descent.h" />
    <ClInclude Include="growing_inputs.h" />
    <ClInclude Include="incremental_order.h" />
    <ClInclude Include="independent_parameters.h" />
    <ClInclude Include="inputs.h" />
    <ClInclude Include="inputs_selection_algorithm.h" />
    <ClInclude Include="instances.h" />
    <ClInclude Include="kappa_coefficient_optimization_threshold.h" />
    <ClInclude Include="levenberg_marquardt_algorithm.h" />
    <ClInclude Include="loss_index.h" />
    <ClInclude Include="mathematical_model.h" />
    <ClInclude Include="matrix.h" />
    <ClInclude Include="matthew_correlation_optimization_threshold.h" />
    <ClInclude Include="mean_squared_error.h" />
    <ClInclude Include="minkowski_error.h" />
    <ClInclude Include="missing_values.h" />
    <ClInclude Include="model_selection.h" />
    <ClInclude Include="multilayer_perceptron.h" />
    <ClInclude Include="neural_network.h" />
    <ClInclude Include="neural_parameters_norm.h" />
    <ClInclude Include="newton_method.h" />
    <ClInclude Include="normalized_squared_error.h" />
    <ClInclude Include="numerical_differentiation.h" />
    <ClInclude Include="numerical_integration.h" />
    <ClInclude Include="opennn.h" />
    <ClInclude Include="order_selection_algorithm.h" />
    <ClInclude Include="ordinary_differential_equations.h" />
    <ClInclude Include="outputs.h" />
    <ClInclude Include="outputs_integrals.h" />
    <ClInclude Include="perceptron.h" />
    <ClInclude Include="perceptron_layer.h" />
    <ClInclude Include="performance_term.h" />
    <ClInclude Include="plug_in.h" />
    <ClInclude Include="principal_components_layer.h" />
    <ClInclude Include="probabilistic_layer.h" />
    <ClInclude Include="pruning_inputs.h" />
    <ClInclude Include="quasi_newton_method.h" />
    <ClInclude Include="random_search.h" />
    <ClInclude Include="regularization_term.h" />
    <ClInclude Include="roc_area_error.h" />
    <ClInclude Include="roc_curve_optimization_threshold.h" />
    <ClInclude Include="root_mean_squared_error.h" />
    <ClInclude Include="scaling_layer.h" />
    <ClInclude Include="selective_pruning.h" />
    <ClInclude Include="simulated_annealing_order.h" />
    <ClInclude Include="sum_squared_error.h" />
    <ClInclude Include="testing_analysis.h" />
    <ClInclude Include="threshold_selection_algorithm.h" />
    <ClInclude Include="training_algorithm.h" />
    <ClInclude Include="training_rate_algorithm.h" />
    <ClInclude Include="training_strategy.h" />
    <ClInclude Include="unscaling_layer.h" />
    <ClInclude Include="variables.h" />
    <ClInclude Include="vector.h" />
    <ClInclude Include="weighted_squared_error.h" />
    <ClInclude Include="youden_index_optimization_threshold.h" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="CMakeLists.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="opennn.pro" />
    <None Include="utilities.cu" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>